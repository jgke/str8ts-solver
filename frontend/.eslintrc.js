module.exports = {
  env: {
    browser: true,
    es6: true,
    node: true,
  },
  extends: [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/electron",
    "plugin:import/typescript",
    "plugin:react/all",
    "plugin:react-hooks/recommended",
    "plugin:jest/recommended",
    "plugin:promise/recommended",
    "airbnb",
    "airbnb/hooks",
    "plugin:prettier/recommended",
    "plugin:jest-dom/recommended",
    "plugin:testing-library/react",
  ],
  plugins: [
    "@typescript-eslint",
    "eslint-plugin-tsdoc",
    "eslint-plugin-jsdoc",
    "react",
    "react-hooks",
    "jest-dom",
    "testing-library",
  ],
  rules: {
    // A temporary hack related to IDE not resolving correct package.json
    "import/no-extraneous-dependencies": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-filename-extension": "off",
    "import/extensions": "off",
    "import/no-unresolved": "off",
    "import/no-import-module-exports": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "off",
    "no-unused-vars": "off",
    "no-bitwise": 0,
    "no-plusplus": 0,
    "import/no-default-export": "error",
    "import/prefer-default-export": "off",
    camelcase: "off",
    "@typescript-eslint/no-non-null-assertion": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        argsIgnorePattern: "^_",
        caughtErrorsIgnorePattern: "^_",
        destructuredArrayIgnorePattern: "^_",
        varsIgnorePattern: "^_",
        ignoreRestSiblings: true,
      },
    ],
    "jsx-a11y/mouse-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "no-restricted-syntax": [
      "error",
      {
        selector: "ForInStatement",
        message:
          "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
      },
      {
        selector: "LabeledStatement",
        message: "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
      },
      {
        selector: "WithStatement",
        message: "`with` is disallowed in strict mode because it makes code impossible to predict and optimize.",
      },
    ],
    "no-continue": "off",
    "no-param-reassign": "off",
    "react/no-array-index-key": "off",
    "jsx-a11y/alt-text": "off",
    "react/jsx-props-no-spreading": "off",
    "react/require-default-props": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/control-has-associated-label": "off",
    "tsdoc/syntax": "warn",
    "jsdoc/require-jsdoc": [
      "warn",
      {
        enableFixer: false,
        publicOnly: {
          cjs: true,
          esm: true,
          window: true,
        },
        require: {
          ArrowFunctionExpression: true,
          ClassDeclaration: true,
          ClassExpression: true,
          FunctionDeclaration: true,
          FunctionExpression: true,
          MethodDefinition: true,
        },
        contexts: ["TSInterfaceDeclaration", "TSTypeAliasDeclaration", "TSEnumDeclaration", "TSPropertySignature"],
      },
    ],
  },
  overrides: [
    {
      files: ["src/__tests__/**/*"],
      rules: {
        "jsdoc/require-jsdoc": "off",
      },
    },
  ],
  parser: "@typescript-eslint/parser",
};
